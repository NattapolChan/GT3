'use client'
import { usePathname } from 'next/navigation'
import { type ReactNode } from 'react'
import { Tune, EachBar, EachTab } from '@/components/tabs/eachnotefield'
import { type songObjectType } from '@/type/tabs'


const dummyTab : songObjectType = {
  bpm: 120, // dont care for now
  timeSig: [4, 4], // dont care for now
  stringTune: ['E', 'A', 'D', 'G', 'B', 'e'],
  tab: [
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [-1, -1, -1, -1, -1, 3],
      [-1, -1, -1, 4, -1, 3],
      [-1, -1, -1, -1, -1, 3],
      [-1, -1, -1, 4, -1, 3],
      [-1, -1, -1, 4, -1, 3],
      [-1, -1, -1, -1, -1, 3],
      [-1, -1, -1, 4, -1, 3],
      [-1, -1, -1, 4, -1, 3],
    ],
    [
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
    ],
    [
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
      [-1, 0, 0, 2, 3, 2],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
    [
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
      [2, 2, 4, 4, 3, 2],
    ],
    [
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
      [3, 5, 5, 4, 3, 3],
    ],
  ],
}


export default function EditTab(): ReactNode {
  let pathname = usePathname() as string
  return (
    <div className="w-full">
      <div className="px-auto text-40 mx-auto py-6 text-center font-mono text-2xl text-teal-400">
        Song Name
      </div>
      <div className="w-full content-center justify-center">
          <div className="absolute pt-4 text-sm">
            {<Tune stringTune={dummyTab.stringTune} />}
          </div>
          <div className="grid-col grid lg:grid-cols-2 border divide-x-[0.1px]">
            {dummyTab.tab.map((list, idx) => {
              return (
                <div key={`${idx} + ${list}`}>
                  <EachBar
                    key={`${idx}`}
                    noteBarList={list}
                    isFirst={idx == 0}
                  />
                  <EachTab
                    key={`${-1-idx}`}
                    noteStringList={dummyTab.stringTune}
                    isFirst={idx == 0}
                  />
                </div>
              )
            })}
          </div>
      </div>
    </div>
  )
}

